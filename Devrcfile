
variables:
  message: "Hello, $USER!"
  message_1 +raw: "Hello, $USER"

environment:
  var_1: "env_var_1"
  var_2: "env_var_2"

run-help:
  desc: "Show envrc tasks descriptions"
  exec: cargo run --bin=devrc -- --help


run cmds="":
  environment:
    RUST_TRACEBACK: "1"
  desc: "Execute given task"
  exec: cargo run --bin=devrc -- {{ cmds }}
  subtasks:
    - name: hello


hello:
  desc: "Print hello world message"
  exec:
    - echo {{ message }}


# specsheet expr.toml -O cmd.target=./my-expr
xtests file="*": |
   specsheet xtests/{{ file }}.toml -O cmd.target.devrc="${CARGO_TARGET_DIR:-../target}/debug/devrc"


clean: cargo clean

lint:
  desc: "Run code linters and formatters after clean"
  exec:
    - cargo clippy --all -- --verbose
    - cargo clippy --all --all-features -- --verbose
    - cargo +nightly fmt --all -- --check
  deps: [clean]

test:
  desc: "Run tests"
  exec:
    - cargo test
    - cargo test --all-features

testm mod="":
  desc: "Test single module"
  environment:
    RUST_TRACEBACK: "1"
    RUST_LOG: info
  exec: |
     cargo test --all-features -- --nocapture {{ mod }}


check:
  desc: "Run checkups"
  deps: [clean, lint, test]


install:
  desc: "Install development version"
  exec: cargo install --bins devrc --all-features --path ./cli


format:
  desc: "Apply code formatter"
  exec: |
    cargo +nightly fmt --all --


prepare-release level="patch":
  desc: "Prepare next release"
  run: |
    cargo release version {{ level }}
    cargo build
    devrc --help > xtests/outputs/test_help_test_1_1_stdout.ansitxt
