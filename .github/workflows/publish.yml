name: publish
# on:
#   push:
#     tags:
#       - "v*"

on: [push]

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            cross: false
          - os: macos-latest
            target: x86_64-apple-darwin
            cross: false
    steps:
      - name: Install musl tools
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install musl-tools

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: "Generate completions ${{ matrix.os }} ${{ matrix.target }}"
        run: |
          echo "Generate completions";

      - name: "Package ${{ github.ref }} ${{ matrix.os }} ${{ matrix.target }}"
        id: package
        # if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "Create package: ${{github.ref}} ${{matrix.os}} ${{ matrix.target }}";

        shell: bash

      - name: Generate Changelog
        run: echo "# Good things have arrived" > ${{ github.workflow }}-CHANGELOG.txt

      - name: "Release ${{ github.ref }}"
        shell: bash
        run: |
          echo "Create release ${{ github.ref }}"

      - name: Build Binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --frozen --release --all-features --target ${{ matrix.target }}

      - name: Make archive
        shell: bash
        run: |
          ls -la ./


      - name: Release
        uses: softprops/action-gh-release@v1
        # if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: ${{ github.workflow }}-CHANGELOG.txt
          draft: true
          prerelease: true
          # files: ${{ steps.package.outputs.archive }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
