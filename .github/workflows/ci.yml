name: CI

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo clippy --all-targets --all-features --workspace -- -D warnings

  compile_linux:
    name: "Compile ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # rust: [stable, beta, nightly, 1.47.0]
        rust: [stable]
        os: [ubuntu-latest]
        target: [x86_64-unknown-linux-musl, x86_64-unknown-linux-gnu]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install musl tools and dependencies
        run: |
          sudo apt-get install musl-tools libssl-dev


      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install target x86_64-unknown-linux-musl
        run: |
          rustup target add x86_64-unknown-linux-musl


      - name: Build devrc
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --verbose --all-features --target ${{ matrix.target }}

      - name: Install devrc
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --all-features --target ${{ matrix.target }} --path ./

  compile_macos:
    name: "Compile ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # rust: [stable, beta, nightly, 1.47.0]
        rust: [stable]
        os: [macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build devrc
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --verbose --all-features

      - name: Install devrc
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --all-features --path ./

  tests_macos:
    name: "Test ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        # rust: [stable, beta, nightly, 1.47.0]
        rust: [stable]
        os: [macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --all-features --no-fail-fast
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"

      - name: Install devrc
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --all-features --path ./

      - name: Run xtests
        run: |
          git clone https://github.com/ogham/specsheet.git /tmp/specsheet
          cargo install --path /tmp/specsheet
          specsheet xtests/*.toml
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"


  tests_linux:
    name: "Test ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        # rust: [stable, beta, nightly, 1.47.0]
        rust: [stable]
        os: [ubuntu-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run tests
        run: cargo test --all-features --no-fail-fast
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"

      - name: Install devrc
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --all-features --path ./

      - name: Run xtests
        run: |
          git clone https://github.com/ogham/specsheet.git /tmp/specsheet
          cargo install --path /tmp/specsheet
          specsheet xtests/*.toml
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"
