name: CI

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - run: cargo fmt --all -- --check

  clippy:
    name: "Lint code with clippy on OS=${{ matrix.os }} rust=${{ matrix.rust }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - {os: ubuntu-latest, rust: stable, feature: --all-features, target: x86_64-unknown-linux-gnu}
          - {os: ubuntu-latest, rust: stable, feature: "", target: x86_64-unknown-linux-gnu}
          - {os: macos-latest, rust: stable, feature: --all-features, target: x86_64-apple-darwin}
          - {os: macos-latest, rust: stable, feature: "", target: x86_64-apple-darwin}

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: clippy
      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo clippy --all-targets ${{ matrix.feature }} --workspace -- -D warnings


  tests_macos:
    name: "Test ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        # rust: [stable, beta, nightly, 1.47.0]
        rust: [stable]
        os: [macos-latest]

    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2000M
      SCCACHE_IDLE_TIMEOUT: 0
      SCCACHE_DIR: /Users/runner/Library/Caches/Mozilla.sccache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install sccache via homebrew
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install sccache

      - name: Cache sccache output on ${{ matrix.os }}
        uses: actions/cache@v2
        continue-on-error: true
        with:
          path: ${{ env.SCCACHE_DIR }}
          key: ${{ runner.os }}-sccache-debug-${{ hashFiles('**/Cargo.*') }}
          # restore-keys: ${{ runner.os }}-sccache-

      - name: Start sccache server
        env:
          SCCACHE_DIR: ${{ env.SCCACHE_DIR }}
        run: |
          sccache --start-server

      - name: Run tests
        run: cargo test --no-fail-fast
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0

      - name: Run tests
        run: cargo test --all-features --no-fail-fast
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"

      - name: Install devrc
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --all-features --path ./cli

      - name: Run xtests
        run: |
          git clone https://github.com/ogham/specsheet.git /tmp/specsheet
          cargo install --path /tmp/specsheet
          specsheet xtests/*.toml
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"

      - name: Show sccache stats
        run: |
          sccache --show-stats

      - name: Stop sccache server
        run: |
          sccache --stop-server


  tests_linux:
    name: "Test ${{ matrix.rust }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}

    continue-on-error: true

    strategy:
      fail-fast: false
      matrix:
        # rust: [stable, beta, nightly, 1.47.0]
        rust: [stable]
        os: [ubuntu-latest]

    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2000M
      SCCACHE_IDLE_TIMEOUT: 0
      SCCACHE_DIR: /home/runner/.cache/sccache

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          override: true

      - name: Cache cargo directories
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install sccache via precompiled build
        if: startsWith(matrix.os, 'ubuntu')
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.15
        run: |
          SCCACHE_FILE=sccache-v$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/v$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          chmod +x $SCCACHE_FILE/sccache
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache sccache output on ${{ matrix.os }}
        uses: actions/cache@v2
        continue-on-error: true
        with:
          path: ${{ env.SCCACHE_DIR }}
          key: ${{ runner.os }}-sccache-debug-${{ hashFiles('**/Cargo.*') }}
          # restore-keys: ${{ runner.os }}-sccache-

      - name: Start sccache server
        env:
          SCCACHE_DIR: ${{ env.SCCACHE_DIR }}
        run: |
          sccache --start-server

      - name: Run tests
        run: cargo test --no-fail-fast
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"

      - name: Run tests
        run: cargo test --all-features --no-fail-fast
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"

      - name: Install devrc
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --all-features --path ./cli

      - name: Run xtests
        run: |
          git clone https://github.com/ogham/specsheet.git /tmp/specsheet
          cargo install --path /tmp/specsheet
          specsheet xtests/*.toml
        env:
          RUST_BACKTRACE: full
          CARGO_INCREMENTAL: 0
          # RUSTDOCFLAGS: "-Cpanic=abort"
          # RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off"

      - name: Show sccache stats
        run: |
          sccache --show-stats

      - name: Stop sccache server
        run: |
          sccache --stop-server
