devrc_config:
  interpreter:
    runtime: deno-runtime
    permissions:
      # - disable-all
      # - allow-all
      - allow-env
      - allow-hrtime
      - allow-net: [google.com, httpbin.org]
      - allow-plugin
      - allow-read: ["/tmp"]
      - allow-run
      - allow-write-all
      - allow-write: ["/tmp"]


# devrc_config:
#   interpreter:
#     shell: bash
#     args: [-c]

# devrc_config:
#   interpreter:
#     interpreter: python
#     args: [-c]


# devrc_config:
#   interpreter: bashsss -c


demo_1 param="": |
  console.log("#1 Welcome to Devrc from deno runtime! {{ param }}");


demo_2:
  exec: |
    console.log("#2 Welcome to Devrc from deno runtime! ");


demo_3 name="Alex":
  desc: "Deno runtime example"
  shell:
    runtime: deno-runtime
    permissions:
      - allow-all

  exec: |
    let name = "{{ name }}";

    console.log(`Hello ${name} from node`);

    console.log(Deno);

    console.log(window);

    console.log(navigator);

    console.log(Deno.env);

    console.log(fetch);



demo_4:
  desc: "Load external dependencies"

  exec: |

    import "https://deno.land/std/examples/welcome.ts";

    console.log("hello world");


fetch_url url="https://httpbin.org/get":
  desc: "Fetch given URL"
  exec: |
    const res = await fetch("{{ url }}");
    let body = await res.json();
    console.log(body);

#


typescript:
  desc: "Typescript example"
  exec: |
    interface IBar {
        baz: string
    }

    var foo: {
          [property: string]: IBar
    }

    foo = {
        foobar: {
           baz: 'Hi there!'
        }
    };

    console.log(foo);


demo_5: |
  let name = "";
  alert("Attention!");

  name = prompt("What is your name?");

  confirm(`Are you sure ${name} is your name?`);

  console.log(`Hello, ${name}`);



colors: |
  // Copyright 2018-2021 the Deno authors. All rights reserved. MIT license.
  import { bgBlue, bold, italic, red } from "https://deno.land/std/fmt/colors.ts";

  if (import.meta.main) {
     console.log(bgBlue(italic(red(bold("Hello world!")))));
  }
